/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package favoritebooks;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author pc
 */
public class DisplayInformation extends javax.swing.JFrame {

    /**
     * Creates new form DisplayInformation
     */
    public DisplayInformation() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        BookTitle = new javax.swing.JRadioButton();
        Keyword = new javax.swing.JRadioButton();
        Title = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        keyword = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        book = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        buttonGroup1.add(BookTitle);
        BookTitle.setText("Fully Book Title");
        BookTitle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BookTitleActionPerformed(evt);
            }
        });

        buttonGroup1.add(Keyword);
        Keyword.setText("Keyword");
        Keyword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                KeywordActionPerformed(evt);
            }
        });

        Title.setEditable(false);

        jButton1.setText("Display Informaiton");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        keyword.setEditable(false);

        jButton3.setText("Back to Menu");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        book.setEditable(false);
        book.setColumns(20);
        book.setRows(5);
        jScrollPane1.setViewportView(book);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(BookTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Keyword, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(59, 59, 59)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(Title, javax.swing.GroupLayout.DEFAULT_SIZE, 388, Short.MAX_VALUE)
                            .addComponent(keyword))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 304, Short.MAX_VALUE)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(20, 20, 20))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BookTitle)
                    .addComponent(Title, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Keyword)
                    .addComponent(keyword, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(38, 38, 38)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 198, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

     private void title(String aut) throws FileNotFoundException, IOException{
         
         File inputFile = new File("books.txt");
        BufferedReader reader = new BufferedReader(new FileReader(inputFile));
        int count=0;   
        String currentLine;
        String result= "";
        
        while((currentLine = reader.readLine()) != null) {
             String a = currentLine.split(",")[1].toLowerCase();
   
            if(a.equals(aut.toLowerCase())){
                
                result = "Id: "+currentLine.split(",")[0]+ "\nTitle: "+currentLine.split(",")[1]+ "\nCategory: "+currentLine.split(",")[2]+ "\nAuthor Name Surname: "
                        +currentLine.split(",")[3]+ "\nAward: "+ currentLine.split(",")[4]+ "\nRate: "+currentLine.split(",")[5]+
                         "\nYear: "+ currentLine.split(",")[6]+ "\nNumber of Pages: " +currentLine.split(",")[7]+ "\nShort Description: " +currentLine.split(",")[8];    
            }
        }
       
        
        if(result==""){
            JOptionPane.showMessageDialog(null, "The book of the author you entered could not be found or you not entered fully the name of the book's title. ");
        }
         book.setText(result);  
         //replaceAll("\\s+", "");

     }
     
      private void key(String aut) throws FileNotFoundException, IOException{
         
         File inputFile = new File("books.txt");
        BufferedReader reader = new BufferedReader(new FileReader(inputFile));
        int count=0;   
        String currentLine;
        String result= "";
        
        while((currentLine = reader.readLine()) != null) {
             String a = currentLine.split(",")[8].toLowerCase().replaceAll("\\s+", "");
          
   
            if(a.contains(aut.toLowerCase())){
                
                result += currentLine+"\n";    
            }
        }
       
        
        if(result==""){
            JOptionPane.showMessageDialog(null, "The keyword not found.");
        }
         book.setText(result);  
         //replaceAll("\\s+", "");

     }
      
      public static boolean countLetter(String string) {
       int intValue;
       
       int count = 0;    
            
            
        for(int i = 0; i < string.length(); i++) {    
            if(string.charAt(i) != ' ')    
                count++;    
        } 
        
        if(count<3){
            JOptionPane.showMessageDialog(null, "You must enter at least three letter for search");
            return false;
        }
        else
            return true;
       
     }	
    private void KeywordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_KeywordActionPerformed
        if(Keyword.isSelected()){
            book.setText("");
            Title.setText("");
            Title.setEditable(false);
            keyword.setEditable(true);
        }
    }//GEN-LAST:event_KeywordActionPerformed

    private void BookTitleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BookTitleActionPerformed
        if(BookTitle.isSelected()){
             book.setText("");
            keyword.setText("");
            keyword.setEditable(false);
            Title.setEditable(true);
        }
    }//GEN-LAST:event_BookTitleActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
         AfterLogIn afterlogIn = new AfterLogIn();
         this.setVisible(false);
         afterlogIn.setVisible(true);
         afterlogIn.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
       
        book.setText("");
        
        if(!BookTitle.isSelected()&& !Keyword.isSelected()){
            JOptionPane.showMessageDialog(null,"You must to choose one of the buttons!");
        }
       
       if(BookTitle.isSelected()){
           if(!Title.getText().isEmpty()){
                try {
               title(Title.getText());
           } catch (IOException ex) {
               Logger.getLogger(DisplayInformation.class.getName()).log(Level.SEVERE, null, ex);
             }
           }
            else{
            JOptionPane.showMessageDialog(null,"You left a field blank. Please try again.");
            }
          
       }
       
       if(Keyword.isSelected()){
           if(!keyword.getText().isEmpty()){
               String keyw= keyword.getText();
               if(countLetter(keyw)){
                   try {
               key(keyword.getText());
           } catch (IOException ex) {
               Logger.getLogger(DisplayInformation.class.getName()).log(Level.SEVERE, null, ex);
             }
           }
               }
                
            else{
            JOptionPane.showMessageDialog(null,"You left a field blank. Please try again.");
            }
          
       }
        
        
        
        
        
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DisplayInformation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DisplayInformation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DisplayInformation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DisplayInformation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DisplayInformation().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton BookTitle;
    private javax.swing.JRadioButton Keyword;
    private javax.swing.JTextField Title;
    private javax.swing.JTextArea book;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField keyword;
    // End of variables declaration//GEN-END:variables
}
